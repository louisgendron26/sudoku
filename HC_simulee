import sys
import Node
import math
import random


def probability(p):
    return p > random.uniform(0.0, 1.0)

def cooling(t):
    if t < 0.001:
        return 0
    else:
        return 0.99 * t


def simulated_annealing(problem):
    T=3# initial temperature
    current = Node.Node(problem.initial)
    for t in range(sys.maxsize):
        T = cooling(T)
        if T == 0:
            return current
        neighbors = current.expand(problem, True)
        if not neighbors:
            return current
        next = random.choice(neighbors)
        delta_e = problem.value(current.state) - problem.value(next.state)
        if delta_e > 0 or probability(math.exp(delta_e / T)):
            current = next
            problem.step += 1

    return current
